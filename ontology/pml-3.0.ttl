@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://provenanceweb.org/ns/pml#> .

<http://provenanceweb.org/ns/pml#>
    a owl:Ontology ;
    rdfs:comment "The Provenance Markup Language (PML 3.0) is an OWL ontology that extends W3C's PROV-O with the best parts of PML 2.0."@en ;
    rdfs:label "Provenance Markup Language (PML 3.0)"@en ;
    owl:imports <http://www.w3.org/ns/inverses.owl>, <http://www.w3.org/ns/prov#> ;
    owl:versionInfo "version 3.0, Authors: Timothy Lebo, James P. McCusker, Paulo Pinheiro, Cynthia Chang, and Deborah L. McGuinness"@en .

:AbstractionRule
    a owl:Class ;
    rdfs:label "Abstraction Rule" ;
    rdfs:subClassOf :ProceduralPlan ;
    prov:category "proof" .

:Antecedent
    a owl:Class ;
    rdfs:subClassOf prov:Usage ;
    prov:category "proof" .

:Author
    :order 1 ;
    a owl:Class, owl:NamedIndividual, prov:Role ;
    rdfs:subClassOf prov:Agent ;
    owl:equivalentClass [
        a owl:Class ;
        owl:unionOf ([
                a owl:Restriction ;
                owl:onProperty :authorOf ;
                owl:someValuesFrom owl:Thing
            ]
            [
                a owl:Restriction ;
                owl:onProperty prov:agentOfInfluence ;
                owl:someValuesFrom [
                    a owl:Restriction ;
                    owl:hasValue :Author ;
                    owl:onProperty prov:hadRole
                ]
            ]
        )
    ] ;
    prov:category "base" .

:Authorship
    :order 1.1 ;
    a owl:Class ;
    rdfs:subClassOf prov:Attribution, [
        a owl:Restriction ;
        owl:maxQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onClass :Position ;
        owl:onProperty prov:atLocation
    ] ;
    prov:category "base" ;
    prov:unqualifiedForm :hasAuthor .

:BeliefElement
    a owl:Class ;
    rdfs:comment "The abstract trust concept that associate from an agent to a piece of information. The belief relation shows an agents belief status on the specified information. The specific belief status (e.g. believes, disbelieves, ignorant) and corresponding value metrics are defined in the decendents of this class."@en ;
    rdfs:label "Belief"@en ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasBelievedInformation
    ], [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasBelievingAgent
    ] .

:DeclarativeRule
    :order 19 ;
    a owl:Class ;
    rdfs:comment "A declarative inference rule can be fully specified by patterns for premises and its conclusion.   For example, Modus Ponens, can be specified by the premise patterns ?A,  ?A -&gt; ?B and the conclusion pattern ?B."@en ;
    rdfs:label "Declarative Rule"@en ;
    rdfs:subClassOf prov:Plan ;
    prov:category "base" .

:Document
    :order 8 ;
    a owl:Class ;
    rdfs:comment "A physical information container that is not actionable. They function like database."@en ;
    rdfs:label "Document"@en ;
    rdfs:subClassOf :InformationContainer, [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasVersion
    ] ;
    prov:category "base" .

:DocumentFragment
    :order 11 ;
    a owl:Class ;
    rdfs:comment "When a Document is treated as a one dimensional string, a fragment of the Document may be established with two offsets. The offsets are in units of characters (and not bytes because characters may be multiple bytes)."@en ;
    rdfs:label "Document Fragment"@en ;
    rdfs:subClassOf :InformationContainer, [
        a owl:Restriction ;
        owl:onProperty prov:atLocation ;
        owl:someValuesFrom prov:Location
    ], [
        a owl:Restriction ;
        owl:onClass :Document ;
        owl:onProperty <http://purl.org/dc/terms/isPartOf> ;
        owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger
    ] ;
    prov:category "base" .

:EmptyInformation
    :order 17 ;
    a owl:Class ;
    rdfs:comment "An instance of information indicating no conclusion has been derived, i.e. empty set of statements. In this case, the rawstring may contain some english message indicating no answer."@en ;
    rdfs:label "Empty Information"@en ;
    rdfs:subClassOf :Information ;
    prov:category "base" .

:FloatBelief
    a owl:Class ;
    rdfs:comment "An agent's overall belief on a piece of information quantified by a float value between 0 and 1."@en ;
    rdfs:label "Float Belief"@en ;
    rdfs:subClassOf :BeliefElement, :FloatMetric ;
    prov:category "trust" .

:FloatMetric
    a owl:Class ;
    rdfs:comment "A specific valuation metric that is defined on [0,1] as float number. 0 means fully negative point, 0.5 means nutral point, and 1 means fully positive point."@en ;
    rdfs:label "float metric"@en ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasFloatValue
    ] .

:FloatTrust
    a owl:Class ;
    rdfs:comment "An agent's overall trust on an information source quantified by a float value between 0 and 1."@en ;
    rdfs:label "Float trust"@en ;
    rdfs:subClassOf :FloatMetric, :TrustElement ;
    prov:category "trust" .

:Format
    :order 14 ;
    a owl:Class ;
    rdfs:comment "A plan for the organization and arrangement of specified information. Examples: binary, text,  pdf, etc."@en ;
    rdfs:label "Format"@en ;
    rdfs:subClassOf prov:Entity ;
    prov:category "base" .

:InferenceEngine
    :order 5 ;
    a owl:Class ;
    rdfs:comment "An inference engine represents an engine that is able to produce a justification for a conclusion. Note that the phrase \"inference engine\" applies not only to reasoners but also to other systems like search engines which may justify their answers by direct assertion"@en ;
    rdfs:label "Inference Engine"@en ;
    rdfs:subClassOf prov:SoftwareAgent ;
    prov:category "base" .

:InferenceStep
    a owl:Class ;
    rdfs:comment "An inference step represents a justification for the conclusion of the corresponding node set. Instances of inference step are usually anonymous as part of node set. For this reason, inference steps usually have no URIs. Moreover, an application should treat node set and its inference steps in whole."@en ;
    rdfs:label "Inference Step"@en ;
    rdfs:subClassOf prov:Activity, [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasConfidenceValue
    ], [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasAntecedent
    ], [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasInferenceEngine
    ], [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :fromAnswerOrQuery
    ], [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasSourceUsage
    ] ;
    prov:category "proof" .

:Information
    :order 12 ;
    a owl:Class ;
    rdfs:comment "A piece of information, e.g. a formula in logic languages, and an utterance/word/phrase/sentence/paragraph/article in natural language. It is used as a range of iw:hasContent. This class and two of its sub-classes enable users to specify four types of semantics  (i) Information Annotation - annotate just the format and language used by the content of information; (ii) Information With Content - additionally provide the content of information that is materialized as string without loading a web page; (iii) Information external - additionally provide the URL for fetching the content; and (iv) Information - with every thing including the content string and URL. The second semantics is especially useful when the content is short or mainly used locally. For example, when learning by instruction, the utterances used for learning can be stored within the PML document without being externally stored. By assigning URI reference to information, we can even use owl:sameAs to capture the equivalence of two pieces of information."@en ;
    rdfs:label "Information"@en ;
    rdfs:subClassOf prov:Entity, [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasLanguage
    ], [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasFormat
    ] ;
    prov:category "base" .

:InformationContainer
    :order 7 ;
    a owl:Class ;
    rdfs:label "Information Container" ;
    rdfs:subClassOf prov:Entity ;
    prov:category "base" ;
    prov:editorialNote "Do we mean frbr:Item or frbr:Manifestation?" .

:Language
    :order 16 ;
    a owl:Class ;
    rdfs:comment "The language used to encode the raw string, e.g. English, Knowledge Interchange Format (KIF) , and N3. Languages are in general registered at the core IWRegistry."@en ;
    rdfs:label "Language"@en ;
    rdfs:subClassOf prov:Entity ;
    prov:category "base" .

:OffsetPosition
    :order 11.75 ;
    a owl:Class ;
    rdfs:comment ""@en ;
    rdfs:label "Offset Position"@en ;
    rdfs:subClassOf :Position, [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasToOffset
    ] ;
    prov:category "base" .

:Ontology
    :order 10 ;
    a owl:Class ;
    rdfs:comment "An Ontology is a document that describes a vocabulary of terms and their correlations."@en, "This is a proper superclass of owl:Ontology, since ontologies may be expressed in formalisms other than OWL."@en ;
    rdfs:label "Ontology"@en ;
    rdfs:subClassOf :Document ;
    prov:category "base" .

:OwnedEntity
    :order 2.3 ;
    a owl:Class ;
    rdfs:subClassOf prov:Entity ;
    owl:equivalentClass [
        a owl:Restriction ;
        owl:minQualifiedCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onClass :Owner ;
        owl:onProperty :hasOwner
    ] ;
    prov:category "base" .

:Owner
    :order 2 ;
    a owl:Class, owl:NamedIndividual, prov:Role ;
    rdfs:subClassOf prov:Agent ;
    owl:equivalentClass [
        a owl:Class ;
        owl:unionOf ([
                a owl:Restriction ;
                owl:onProperty :ownerOf ;
                owl:someValuesFrom owl:Thing
            ]
            [
                a owl:Restriction ;
                owl:onProperty prov:agentOfInfluence ;
                owl:someValuesFrom [
                    a owl:Restriction ;
                    owl:hasValue :Owner ;
                    owl:onProperty prov:hadRole
                ]
            ]
        )
    ] ;
    prov:category "base" .

:Ownership
    :order 2.1 ;
    a owl:Class ;
    rdfs:subClassOf prov:Attribution, [
        a owl:Restriction ;
        owl:allValuesFrom :Owner ;
        owl:onProperty prov:agent
    ], [
        a owl:Restriction ;
        owl:allValuesFrom :OwnedEntity ;
        owl:onProperty prov:entity
    ] ;
    prov:category "base" ;
    prov:unqualifiedForm :hasOwner .

:Position
    :order 11.5 ;
    a owl:Class ;
    rdfs:subClassOf prov:Location, [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasFromOffset
    ] ;
    prov:category "base" .

:ProceduralPlan
    :order 18 ;
    a owl:Class ;
    rdfs:comment """A method inference rule, uses patterns for premises and its conclusions, and additionally contains a method that must be applied.  In addition, 
the conclusion needs to be a valid output of the method, using the premises.  For example, procedural attachment is a common encoding form for method rules."""@en ;
    rdfs:label "Procedural Plan"@en ;
    rdfs:subClassOf prov:Plan ;
    prov:category "base" .

:Publisher
    :order 3 ;
    a owl:Class, owl:NamedIndividual, prov:Role ;
    rdfs:subClassOf prov:Agent ;
    owl:equivalentClass [
        a owl:Class ;
        owl:unionOf ([
                a owl:Restriction ;
                owl:onProperty :publisherOf ;
                owl:someValuesFrom owl:Thing
            ]
            [
                a owl:Restriction ;
                owl:onProperty prov:agentOfInfluence ;
                owl:someValuesFrom [
                    a owl:Restriction ;
                    owl:hasValue :Publisher ;
                    owl:onProperty prov:hadRole
                ]
            ]
        )
    ] ;
    prov:category "base" .

:Publishership
    :order 3.1 ;
    a owl:Class ;
    rdfs:subClassOf prov:Attribution ;
    prov:category "base" ;
    prov:unqualifiedForm :hasPublisher .

:Query
    a owl:Class ;
    rdfs:comment "A Query is a formal representation of user's question. For example, the content of the query can be '(type TonysSpecialty ?x)' which is encoded in KIF. An inference engine will take the query's content as input and find corresponding answers, each of which is a tree of node sets representing the proof traces obtained from the inference engine."@en ;
    rdfs:label "Query"@en ;
    rdfs:subClassOf prov:Entity, [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :isFromEngine
    ] ;
    prov:category "proof" .

:Question
    a owl:Class ;
    rdfs:comment "A Question refers to natural language version of a user's query. For example, a question can be \"What is the type of Tony's Specialty?\"  A question is usually additional information to an instance of Query as additional annotation."@en ;
    rdfs:label "Question"@en ;
    rdfs:subClassOf prov:Entity, [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasAnswerPattern
    ] ;
    prov:category "proof" .

:RowColLocation
    :order 11.8 ;
    a owl:Class ;
    rdfs:label "Row Column Location"@en ;
    rdfs:subClassOf prov:Location, [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasToRow
    ], [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasToCol
    ], [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasFromRow
    ], [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasFromCol
    ] ;
    prov:category "base" .

:Sensor
    :order 3.9 ;
    a owl:Class ;
    rdfs:comment "any device that receives a signal or stimulus (as heat or pressure or light or motion etc.) and records it. (WordNet)"@en ;
    rdfs:label "Sensor"@en ;
    rdfs:subClassOf prov:Agent ;
    prov:category "base" .

:Source
    a owl:Class, owl:NamedIndividual, prov:Role ;
    rdfs:comment "A source refers to the source of information. It is the place where we obtain information."@en ;
    rdfs:label "Source"@en ;
    rdfs:subClassOf prov:Entity ;
    prov:category "base" .

:TranslationMethod
    :order 20 ;
    a owl:Class ;
    rdfs:comment "Translation rules are special kinds of inference rules which are used to translate expressions from one language to the other."@en ;
    rdfs:label "Translation Method"@en ;
    rdfs:subClassOf :ProceduralPlan, [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasFromLanguage
    ], [
        a owl:Restriction ;
        owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasToLanguage
    ] ;
    prov:category "base" .

:TrustElement
    a owl:Class ;
    rdfs:comment "The abstract trust concept that associate from an agent to a source. The trust relation summarizes an agent's overall believes about information from the specified source. The specific trust metrics are defined in the decendents of this class."@en ;
    rdfs:label "Trust"@en ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasTrustor
    ], [
        a owl:Restriction ;
        owl:cardinality "1"^^xsd:nonNegativeInteger ;
        owl:onProperty :hasTrustee
    ] .

:WebService
    :order 4 ;
    a owl:Class ;
    rdfs:comment "services implemented by software and available on the Web"@en ;
    rdfs:label "Web Service"@en ;
    rdfs:subClassOf prov:SoftwareAgent ;
    prov:category "base" .

:Webpage
    :order 9 ;
    a owl:Class ;
    rdfs:comment "Collection of files and related resources accessible through the World Wide Web and organized under a particular domain name. Typical files found at a Web site are HTML documents with their associated graphic image files (GIF, JPEG, etc.), scripted programs (in Perl, CGI, Java, etc.), and similar resources. The site's files are usually accessed through hypertext or hyperlinks embedded in other files. A Web site may consist of a single HTML file, or it may comprise hundreds or thousands of related files. A Web site's usual starting point or opening page, called a home page, usually functions as a table of contents or index, with links to other sections of the site. Web sites are hosted on one or more Web servers, which transfer files to client computers or other servers that request them using the HTTP protocol. Although the term ?ite?implies a single physical location, the files and resources of a Web site may actually be spread among several servers in different geographic locations.(adapted from Britannica Concise Encyclopedia)."@en ;
    rdfs:label "Website"@en ;
    rdfs:subClassOf :Document ;
    prov:category "base" .

:authorOf
    a owl:ObjectProperty ;
    rdfs:subPropertyOf prov:contributed .

:fromAnswer
    a owl:ObjectProperty ;
    rdfs:comment "proof" ;
    rdfs:label "root-node-set"@en ;
    rdfs:subPropertyOf :fromAnswerOrQuery ;
    prov:definition "the root node set that answers the specific query but not necessarily the present nodeset that hosts this inference step."@en .

:fromAnswerOrQuery
    a owl:ObjectProperty ;
    rdfs:comment "proof" ;
    rdfs:domain :InferenceStep ;
    rdfs:label "source-answer-or-query"@en ;
    rdfs:subPropertyOf prov:generated ;
    prov:definition "abstract property modifying an inference step. It is use to impose the exclusion restriction on fromAnswer and fromQuery"@en ;
    prov:editorialNote "This will be DEPRECATED" .

:fromQuery
    a owl:ObjectProperty ;
    rdfs:comment "proof" ;
    rdfs:label "source-query"@en ;
    rdfs:range :Query ;
    rdfs:subPropertyOf :fromAnswerOrQuery ;
    prov:definition "the query that is answered by the present node set that hosts this inference step"@en .

:hasAnswer
    a owl:ObjectProperty ;
    rdfs:comment "proof" ;
    rdfs:domain :Query ;
    rdfs:label "answer"@en ;
    rdfs:subPropertyOf prov:hadDerivation ;
    prov:definition "links to one of many alternative answers to this query."@en .

:hasAnswerPattern
    a owl:DatatypeProperty ;
    rdfs:comment "Usually it is an English Pattern for the question. We may apply (string-replace) the variable mappings from the answer node set to generate the answer of the question. We may generate different queries for the same question, e.g. find Li's friends: I can (i) run JTP (KIF) to derive John's friends or (ii) query (SPARQL) a FOAF RDF database using foaf:knows."@en ;
    rdfs:domain :Question ;
    rdfs:label "answer pattern"@en ;
    rdfs:range xsd:string ;
    prov:category "proof" .

:hasAntecedent
    a owl:ObjectProperty ;
    rdfs:domain :InferenceStep ;
    rdfs:label "antecedent"@en ;
    rdfs:subPropertyOf prov:used ;
    owl:propertyChainAxiom (:qualifiedAntecedent
        prov:entity
    ) ;
    prov:category "proof" ;
    prov:definition "An antecedent of an activity is an entity that is used by in such a way that the generated entities are derived from them. This provides a link between processual and derivational provenance that will allow proof-theoretic analysis to be applied to PROV and PML provenance assertions."@en .

:hasAuthor
    :order .5 ;
    a owl:ObjectProperty ;
    rdfs:domain :Document ;
    rdfs:range :Author ;
    rdfs:subPropertyOf prov:wasAttributedTo ;
    owl:inverseOf :authorOf ;
    owl:propertyChainAxiom (:qualifiedAuthorship
        prov:agent
    ) ;
    prov:category "base" ;
    prov:inverse "authorOf"@en ;
    prov:qualifiedForm :Authorship, :qualifiedAuthorship .

:hasBelievedInformation
    a owl:ObjectProperty ;
    rdfs:comment "the information being believed in."@en ;
    rdfs:domain :BeliefElement ;
    rdfs:label "believedIn"@en ;
    rdfs:range :Information ;
    prov:category "trust" .

:hasBelievingAgent
    a owl:ObjectProperty ;
    rdfs:comment "the agent that hold the belief assertion."@en ;
    rdfs:domain :BeliefElement ;
    rdfs:label "believedBy"@en ;
    rdfs:range prov:Agent ;
    prov:category "trust" .

:hasConclusion
    a owl:ObjectProperty ;
    rdfs:label "conclusion"@en ;
    rdfs:subPropertyOf prov:generated ;
    prov:category "proof" ;
    prov:definition "links to the conclusion of the present node set. The conclusion is the one after applied variable mapping of the node set's inference steps. The content/language/format of conclusion is the only information needed in comparing conclusions."@en .

:hasConfidenceValue
    a owl:DatatypeProperty .

:hasCreationDateTime
    a owl:DatatypeProperty ;
    rdfs:comment "When the artifact has been first created."@en ;
    rdfs:domain prov:Bundle ;
    rdfs:label "created"@en ;
    rdfs:range xsd:dateTime ;
    rdfs:subPropertyOf prov:generatedAtTime .

:hasDescription
    :order 0.1 ;
    a owl:ObjectProperty ;
    rdfs:comment "The detailed description of the identified thing, e.g. a web page describing KIF language. An identified thing may have zero to many descriptions that could be written in different languages, format, and etc."@en ;
    rdfs:label "description"@en ;
    rdfs:range :Information ;
    prov:category "base" .

:hasDischarge
    a owl:ObjectProperty ;
    rdfs:domain :InferenceStep ;
    rdfs:label "discharge"@en ;
    rdfs:subPropertyOf prov:invalidated ;
    prov:category "proof" ;
    prov:definition "dismiss causal dependency from the conclusion of the present nodeset to an (recursive) antecedent nodeset of the present inference step. In particular, OR-elimination can only be implemented by hasDischarge"@en .

:hasEncoding
    :order 0 ;
    a owl:DatatypeProperty ;
    rdfs:comment "The content encoding, e.g. \"base64\". The value of this property helps applications determine the decoder of the raw string."@en ;
    rdfs:domain prov:Entity ;
    rdfs:label "encoding"@en ;
    rdfs:range xsd:string ;
    prov:category "base" .

:hasFloatValue
    a owl:DatatypeProperty ;
    rdfs:comment "The value of the metric, and We may consider better datatype in future."@en ;
    rdfs:domain :FloatMetric ;
    rdfs:label "value"@en ;
    rdfs:range xsd:float ;
    prov:category "trust" .

:hasFormat
    :order 13 ;
    a owl:ObjectProperty ;
    rdfs:comment "it specifies the format of information, e.g. \"pdf\", \"ppt\" (Power Point). It is mainly used to determine the appropriate application for process/display purpose."@en ;
    rdfs:domain :Information ;
    rdfs:label "format"@en ;
    rdfs:range :Format ;
    prov:category "base" .

:hasFromCol
    :order 11.82 ;
    a owl:DatatypeProperty ;
    rdfs:comment "The from column of the fragment (inclusive, index based on 1)"@en ;
    rdfs:domain :RowColLocation ;
    rdfs:label "from-column"@en ;
    rdfs:range xsd:int ;
    prov:category "base" .

:hasFromLanguage
    :order 20.1 ;
    a owl:ObjectProperty ;
    rdfs:comment "language used by the source."@en ;
    rdfs:domain :TranslationMethod ;
    rdfs:label "from-language"@en ;
    rdfs:range :Language ;
    prov:category "base" .

:hasFromOffset
    :order 11.76 ;
    a owl:DatatypeProperty ;
    rdfs:comment "The from offset of the fragment (inclusive, index based on 0)."@en ;
    rdfs:domain :OffsetPosition ;
    rdfs:label "from-offset"@en ;
    rdfs:range xsd:int ;
    prov:category "base" .

:hasFromRow
    :order 11.81 ;
    a owl:DatatypeProperty ;
    rdfs:comment "The from row of the fragment (inclusive, index based on 1)"@en ;
    rdfs:domain :RowColLocation ;
    rdfs:label "from-row"@en ;
    rdfs:range xsd:int ;
    prov:category "base" .

:hasInferenceEngine
    a owl:ObjectProperty ;
    rdfs:comment "links to the inference engine that derives this inference step."@en ;
    rdfs:domain :InferenceStep ;
    rdfs:label "inference engine"@en ;
    rdfs:range :InferenceEngine ;
    rdfs:subPropertyOf prov:wasAssociatedWith ;
    prov:category "proof" .

:hasLanguage
    :order 15 ;
    a owl:ObjectProperty ;
    rdfs:comment "it specifies the language used to encode information, e.g. \"Tony's specialty is shellfish\" is encoded in English. This property may also link to a registered formal language such as KIF."@en ;
    rdfs:domain :Information ;
    rdfs:label "language"@en ;
    rdfs:range :Language ;
    prov:category "base" .

:hasModificationDateTime
    a owl:DatatypeProperty ;
    rdfs:comment "When the artifact has been modified."@en ;
    rdfs:domain prov:Bundle ;
    rdfs:label "last modified"@en ;
    rdfs:range xsd:dateTime ;
    rdfs:subPropertyOf prov:generatedAtTime .

:hasOwner
    :order 1.5 ;
    a owl:ObjectProperty ;
    rdfs:comment "the owner of a thing."@en ;
    rdfs:domain :OwnedEntity ;
    rdfs:label "owner"@en ;
    rdfs:range :Owner ;
    rdfs:subPropertyOf prov:wasAttributedTo ;
    owl:inverseOf :ownerOf ;
    prov:category "base" ;
    prov:inverse "ownerOf"@en ;
    prov:qualifiedForm :Ownership, :qualifiedOwnership .

:hasPublicationDateTime
    a owl:DatatypeProperty ;
    rdfs:comment "When the publication is published."@en ;
    rdfs:label "published in"@en ;
    rdfs:range xsd:dateTime ;
    rdfs:subPropertyOf prov:generatedAtTime .

:hasPublisher
    :order 2.5 ;
    a owl:ObjectProperty ;
    rdfs:comment "An agent responsible for making the document publicly available. see also http://purl.org/dc/elements/1.1/publisher."@en ;
    rdfs:domain :Document ;
    rdfs:label "publisher"@en ;
    rdfs:range :Publisher ;
    rdfs:subPropertyOf prov:wasAttributedTo ;
    owl:inverseOf :publisherOf ;
    prov:category "base" ;
    prov:inverse "publisherOf"@en ;
    prov:qualifiedForm :Publishership, :qualifiedPublishership .

:hasSourceUsage
    a owl:ObjectProperty ;
    rdfs:comment "Deprecated?", "links to the source usage that is used in deriving this inference step."@en ;
    rdfs:domain :InferenceStep ;
    rdfs:label "source usage"@en ;
    rdfs:subPropertyOf prov:used .

:hasToCol
    :order 11.84 ;
    a owl:DatatypeProperty ;
    rdfs:comment "The to column of the fragment (inclusive, index based on 1)"@en ;
    rdfs:domain :RowColLocation ;
    rdfs:label "to-column"@en ;
    rdfs:range xsd:int ;
    prov:category "base" .

:hasToLanguage
    :order 20.2 ;
    a owl:ObjectProperty ;
    rdfs:comment "language used by the target."@en ;
    rdfs:domain :TranslationMethod ;
    rdfs:label "to-language"@en ;
    rdfs:range :Language ;
    prov:category "base" .

:hasToOffset
    :order 11.6 ;
    a owl:DatatypeProperty ;
    rdfs:comment "The to offset of the fragment (exclusive, index based on 0)"@en ;
    rdfs:domain :OffsetPosition ;
    rdfs:label "to-offset"@en ;
    rdfs:range xsd:int ;
    prov:category "base" .

:hasToRow
    :order 11.83 ;
    a owl:DatatypeProperty ;
    rdfs:comment "The to row of the fragment (inclusive, index based on 1)"@en ;
    rdfs:domain :RowColLocation ;
    rdfs:label "to-row"@en ;
    rdfs:range xsd:int ;
    prov:category "base" .

:hasTrustee
    a owl:ObjectProperty ;
    rdfs:comment "the information source that is trusted in providing information."@en ;
    rdfs:domain :TrustElement ;
    rdfs:label "trustee"@en ;
    rdfs:range :Source ;
    prov:category "trust" .

:hasTrustor
    a owl:ObjectProperty ;
    rdfs:comment "the agent that hold the trust relation with the trustee."@en ;
    rdfs:domain :TrustElement ;
    rdfs:label "trustor"@en ;
    rdfs:range prov:Agent ;
    prov:category "trust" .

:hasVersion
    :order 0.3 ;
    a owl:DatatypeProperty ;
    rdfs:comment "the version number."@en ;
    rdfs:label "version"@en ;
    rdfs:range xsd:string ;
    prov:category "base" .

:isConsequentOf
    a owl:ObjectProperty ;
    rdfs:comment "links to an inference step that derives the conclusion of the present node set."@en ;
    rdfs:label "because"@en ;
    rdfs:range :InferenceStep ;
    rdfs:subPropertyOf prov:wasGeneratedBy ;
    prov:category "proof" .

:isExplanationOf
    a owl:ObjectProperty ;
    rdfs:comment "proof" ;
    rdfs:label "explains"@en ;
    rdfs:subPropertyOf prov:hadDerivation ;
    prov:definition "links to a node set (and its antecedents) that is explained by the present node set. This is used for connecting the orginal justifications to the NodeSet that abstracts this node set (and its antecedents)."@en .

:isFromEngine
    a owl:ObjectProperty ;
    rdfs:domain :Query ;
    rdfs:label "answer-generator"@en ;
    rdfs:range :InferenceEngine ;
    rdfs:subPropertyOf prov:wasAttributedTo ;
    prov:category "proof" .

:isQueryFor
    a owl:ObjectProperty ;
    rdfs:comment "proof" ;
    rdfs:domain :Query ;
    rdfs:label "query-for"@en ;
    rdfs:range :Question ;
    rdfs:subPropertyOf prov:specializationOf .

:nil
    a owl:NamedIndividual ;
    rdfs:comment "The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it."@en ;
    rdfs:label "nil"@en .

:order
    a owl:AnnotationProperty .

:ownerOf
    a owl:ObjectProperty ;
    rdfs:subPropertyOf prov:contributed .

:publisherOf
    a owl:ObjectProperty ;
    rdfs:subPropertyOf prov:contributed .

:qualifiedAntecedent
    a owl:ObjectProperty ;
    rdfs:subPropertyOf prov:qualifiedUsage ;
    prov:category "trust" .

:qualifiedAuthorship
    :order 1.2 ;
    a owl:ObjectProperty ;
    rdfs:range :Authorship ;
    rdfs:subPropertyOf prov:qualifiedAttribution ;
    prov:category "qualified" ;
    prov:unqualifiedForm :hasAuthor .

:qualifiedOwnership
    :order 2.2 ;
    a owl:ObjectProperty ;
    rdfs:range :Ownership ;
    rdfs:subPropertyOf prov:qualifiedAttribution ;
    prov:category "qualified" ;
    prov:unqualifiedForm :hasOwner .

:qualifiedPublishership
    :order 3.2 ;
    a owl:ObjectProperty ;
    rdfs:range :Publishership ;
    rdfs:subPropertyOf prov:qualifiedAttribution ;
    prov:category "qualified" ;
    prov:unqualifiedForm :hasPublisher .

<http://provenanceweb.org/ns/pml-proof#>
    a owl:Ontology ;
    rdfs:comment "The proof-theoretic part of PML3 ontology. It is a fundamental component of PML3 ontology."@en ;
    rdfs:label "PML3 proof ontology"@en ;
    owl:imports <http://provenanceweb.org/ns/pml-base#>, <http://www.w3.org/ns/inverses.owl>, <http://www.w3.org/ns/prov#> ;
    owl:versionInfo "version 3.0, Authors: Timothy Lebo, James P. McCusker, Deborah L. McGuinness, Li Ding, Paulo Pinheiro da Silva, Alyssa Glass, and Cynthia Chang"@en .

<http://provenanceweb.org/ns/pml-trust#>
    a owl:Ontology ;
    rdfs:comment "The trust part of PML2 ontology. It is a fundamental component of PML2 ontology."@en ;
    rdfs:label "PML2 trust ontology"@en ;
    owl:imports <http://www.w3.org/ns/prov#> ;
    owl:versionInfo "version 2.0, Authors: Deborah L. McGuinness, Honglei Zeng,  Li Ding, Paulo Pinheiro da Silva, Alyssa Glass, and Cynthia Chang"@en .

<http://purl.org/dc/terms/isPartOf>
    a owl:ObjectProperty ;
    prov:category "base" .

rdf:PlainLiteral
    a rdfs:Datatype .

rdfs:Literal
    a rdfs:Datatype .

rdfs:comment
    a owl:AnnotationProperty .

rdfs:label
    a owl:AnnotationProperty .

xsd:anyURI
    a rdfs:Datatype .

xsd:dateTime
    a rdfs:Datatype .

xsd:decimal
    a rdfs:Datatype .

xsd:double
    a rdfs:Datatype .

xsd:float
    a rdfs:Datatype .

xsd:int
    a rdfs:Datatype .

xsd:integer
    a rdfs:Datatype .

xsd:string
    a rdfs:Datatype .

owl:Thing
    a owl:Class .

owl:versionInfo
    a owl:AnnotationProperty .

prov:Activity
    a owl:Class .

prov:Agent
    a owl:Class .

prov:AgentInfluence
    a owl:Class ;
    rdfs:subClassOf [
        a owl:Restriction ;
        owl:onClass prov:Agent ;
        owl:onProperty prov:agent ;
        owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger
    ] .

prov:Attribution
    a owl:Class .

prov:Bundle
    a owl:Class .

prov:Collection
    a owl:Class .

prov:Entity
    a owl:Class .

prov:Location
    a owl:Class .

prov:Plan
    a owl:Class ;
    rdfs:subClassOf prov:Entity .

prov:Role
    a owl:Class .

prov:SoftwareAgent
    a owl:Class .

prov:Usage
    a owl:Class .

prov:agent
    a owl:ObjectProperty .

prov:agentOfInfluence
    a owl:ObjectProperty .

prov:atLocation
    a owl:ObjectProperty .

prov:category
    a owl:AnnotationProperty .

prov:contributed
    a owl:ObjectProperty .

prov:definition
    a owl:AnnotationProperty .

prov:editorialNote
    a owl:AnnotationProperty .

prov:entity
    a owl:ObjectProperty .

prov:generated
    a owl:ObjectProperty .

prov:hadDerivation
    a owl:ObjectProperty .

prov:hadRole
    a owl:ObjectProperty .

prov:invalidated
    a owl:ObjectProperty .

prov:inverse
    a owl:AnnotationProperty .

prov:qualifiedAttribution
    a owl:ObjectProperty .

prov:qualifiedForm
    a owl:AnnotationProperty .

prov:qualifiedUsage
    a owl:ObjectProperty .

prov:specializationOf
    a owl:ObjectProperty .

prov:unqualifiedForm
    a owl:AnnotationProperty .

prov:used
    a owl:ObjectProperty .

prov:wasAssociatedWith
    a owl:ObjectProperty .

prov:wasAttributedTo
    a owl:ObjectProperty .

prov:wasDerivedFrom
    a owl:ObjectProperty ;
    owl:propertyChainAxiom (prov:wasGeneratedBy
        :hasAntecedent
    ) .

prov:wasGeneratedBy
    a owl:ObjectProperty .

