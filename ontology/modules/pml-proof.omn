Prefix: : <http://provenanceweb.org/ns/pml#>
Prefix: dc: <http://purl.org/dc/elements/1.1/>
Prefix: owl: <http://www.w3.org/2002/07/owl#>
Prefix: pml: <http://provenanceweb.org/ns/pml#>
Prefix: rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
Prefix: xml: <http://www.w3.org/XML/1998/namespace>
Prefix: xsd: <http://www.w3.org/2001/XMLSchema#>
Prefix: prov: <http://www.w3.org/ns/prov#>
Prefix: rdfs: <http://www.w3.org/2000/01/rdf-schema#>



Ontology: <http://provenanceweb.org/ns/pml-proof#>

Import: <http://provenanceweb.org/ns/pml#>

Annotations: 
    rdfs:comment "The proof-theoretic part of PML3 ontology. It is a fundamental component of PML3 ontology."@en,
    owl:versionInfo "version 3.0, Authors: Timothy Lebo, James P. McCusker, Deborah L. McGuinness, Li Ding, Paulo Pinheiro da Silva, Alyssa Glass, and Cynthia Chang"@en,
    rdfs:label "PML3 proof ontology"@en

AnnotationProperty: owl:versionInfo

    
AnnotationProperty: prov:definition

    
AnnotationProperty: rdfs:label

    
AnnotationProperty: rdfs:comment

    
Datatype: rdf:PlainLiteral

    
Datatype: xsd:int

    
Datatype: xsd:string

    
Datatype: rdfs:Literal

    
ObjectProperty: qualifiedAntecedent

    SubPropertyOf: 
        prov:qualifiedUsage
    
    
ObjectProperty: hasDischarge

    Annotations: 
        rdfs:label "discharge"@en,
        prov:definition "dismiss causal dependency from the conclusion of the present nodeset to an (recursive) antecedent nodeset of the present inference step. In particular, OR-elimination can only be implemented by hasDischarge"@en
    
    SubPropertyOf: 
        prov:invalidated
    
    Domain: 
        InferenceStep
    
    
ObjectProperty: prov:used

    
ObjectProperty: hadAntecedent

    Annotations: 
        prov:definition "An antecedent of an activity is an entity that is used by in such a way that the generated entities are derived from them. This provides a link between processual and derivational provenance that will allow proof-theoretic analysis to be applied to PROV and PML provenance assertions."@en,
        rdfs:label "antecedent"@en
    
    SubPropertyOf: 
        prov:used
    
    SubPropertyChain: 
        qualifiedAntecedent o prov:entity
    
    Domain: 
        InferenceStep
    
    
ObjectProperty: hasConclusion

    Annotations: 
        rdfs:label "conclusion"@en,
        prov:definition "links to the conclusion of the present node set. The conclusion is the one after applied variable mapping of the node set's inference steps. The content/language/format of conclusion is the only information needed in comparing conclusions. "@en
    
    SubPropertyOf: 
        prov:generated
    
    
ObjectProperty: prov:wasAttributedTo

    
ObjectProperty: prov:specializationOf

    
ObjectProperty: prov:wasAssociatedWith

    
ObjectProperty: prov:wasGeneratedBy

    
ObjectProperty: prov:hadDerivation

    
ObjectProperty: prov:entity

    
ObjectProperty: isConsequentOf

    Annotations: 
        rdfs:label "because"@en,
        rdfs:comment "links to an inference step that derives the conclusion of the present node set."@en
    
    SubPropertyOf: 
        prov:wasGeneratedBy
    
    Range: 
        InferenceStep
    
    
ObjectProperty: prov:invalidated

    
ObjectProperty: prov:wasDerivedFrom

    SubPropertyChain: 
        prov:wasGeneratedBy o hadAntecedent
    
    
ObjectProperty: abstractedFrom

    SubPropertyOf: 
        prov:wasDerivedFrom
    
    
ObjectProperty: isQueryFor

    Annotations: 
        rdfs:label "query-for"@en
    
    SubPropertyOf: 
        prov:specializationOf
    
    Domain: 
        Query
    
    Range: 
        Question
    
    
ObjectProperty: prov:generated

    
ObjectProperty: prov:hadPlan

    
ObjectProperty: prov:qualifiedUsage

    
ObjectProperty: prov:agentOfInfluence

    
ObjectProperty: hasAnswer

    Annotations: 
        rdfs:label "answer"@en,
        prov:definition "links to one of many alternative answers to this query."@en
    
    SubPropertyOf: 
        prov:hadDerivation
    
    Domain: 
        Query
    
    
DataProperty: prov:value

    
DataProperty: hasConfidenceValue

    
Class: owl:Thing

    
Class: InferenceStep

    Annotations: 
        rdfs:label "Inference Step"@en,
        rdfs:comment "An inference step represents a justification for the conclusion of the corresponding node set. Instances of inference step are usually anonymous as part of node set. For this reason, inference steps usually have no URIs. Moreover, an application should treat node set and its inference steps in whole."@en
    
    SubClassOf: 
        prov:wasAssociatedWith exactly 1 InferenceEngine,
        prov:Activity,
        hadAntecedent max 1 owl:Thing,
        hasConfidenceValue max 1 rdfs:Literal
    
    
Class: Query

    Annotations: 
        rdfs:comment "A Query is a formal representation of user's question. For example, the content of the query can be '(type TonysSpecialty ?x)' which is encoded in KIF. An inference engine will take the query's content as input and find corresponding answers, each of which is a tree of node sets representing the proof traces obtained from the inference engine. "@en,
        rdfs:label "Query"@en
    
    SubClassOf: 
        Information
    
    
Class: Assertion

    SubClassOf: 
        InferenceStep
    
    
Class: Derivation

    SubClassOf: 
        InferenceStep,
        prov:Derivation
    
    
Class: ProceduralPlan

    
Class: AbstractionRule

    Annotations: 
        rdfs:label "Abstraction Rule"
    
    SubClassOf: 
        prov:Plan
    
    
Class: prov:Usage

    
Class: prov:Activity

    
Class: Assumption

    SubClassOf: 
        InferenceStep,
        prov:generated min 1 Information
    
    
Class: Rule

    
Class: AnswerTemplate

    Annotations: 
        rdfs:label "Answer Template"
    
    SubClassOf: 
        Template
    
    
Class: prov:Association

    
Class: Template

    Annotations: 
        rdfs:label "Template"
    
    SubClassOf: 
        prov:value min 1 xsd:string,
        DeclarativePlan
    
    
Class: QuestionTemplate

    Annotations: 
        rdfs:label "Question Template"
    
    SubClassOf: 
        Template
    
    
Class: Discharge

    SubClassOf: 
        prov:invalidated min 1 Information,
        InferenceStep
    
    
Class: InferenceEngine

    SubClassOf: 
        prov:agentOfInfluence some 
            (prov:Association
             and (prov:hadPlan some Rule))
    
    
Class: prov:Entity

    
Class: DeclarativePlan

    Annotations: 
        prov:definition "Declarative plans are specified in terms of declarative patterns. Contrast with procedural plan.",
        rdfs:label "Declarative Plan"
    
    
Class: Answer

    SubClassOf: 
        Information,
        prov:wasDerivedFrom min 1 (Query
         or Question)
    
    
Class: Information

    SubClassOf: 
        prov:value min 1 rdfs:Literal
    
    
Class: prov:Derivation

    
Class: Question

    Annotations: 
        rdfs:comment "A Question refers to natural language version of a user's query. For example, a question can be \"What is the type of Tony's Specialty?\"  A question is usually additional information to an instance of Query as additional annotation."@en,
        rdfs:label "Question"@en
    
    SubClassOf: 
        Information
    
    
Class: InformationlessActivity

    Annotations: 
        rdfs:label "Informationless Activity"
    
    EquivalentTo: 
        prov:Activity
         and (prov:generated max 0 Information)
    
    SubClassOf: 
        prov:Activity
    
    
Class: prov:Plan

    
Class: Antecedent

    SubClassOf: 
        prov:Usage
    
    
